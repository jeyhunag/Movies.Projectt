@model HomeViewModel
@{
    ViewData["Title"] = "Home Page";
    int count = 0;
}
@section addcss{
    <link rel="stylesheet" href="~/css/owl-carusel.css" rel="stylesheet" asp-append-version="true" />
    <style>

    </style>
}
<div class="hero-slider owl-carousel owl-theme ">
    <!--Esas Carusel-->
    <!--item-->
    @await Component.InvokeAsync("Movie", new{isneww = true})
    <!--item-->
</div>
<div class="container">
    <div id="moviesCarusel">
        <!--Featured,Movies,Shows Carusel-->
        <div class="row">
            <div class="movie-category">
                <ul class="featured-movies-shows">

                    @foreach (var item in Model.GenresCategories.Where(gc => gc.Name.Contains("Action") || gc.Name.Contains("Sport")))
                    {
                        <li class=" active px-3 me-4" data-category="@item.Name">@item.Name</li>
                    }

                </ul>
                <div class="images container">

                    @foreach (var item in Model.GenresCategories.Where(gc => gc.Name.Contains("Action") || gc.Name.Contains("Sport")))
                    {

                        count++;
                        if (count == 1)
                        {
                            <div class="imageJ @item.Name active text-white">

                                @await Component.InvokeAsync("Movie", new{categoryId = item.Id})


                            </div>
                        }
                        else
                        {
                            <div class="imageJ @item.Name text-white">
                                @await Component.InvokeAsync("Movie", new{categoryId = item.Id})
                            </div>
                        }

                    }
                </div>
            </div>
        </div>
    </div>
    <div class="wrapper">
        <!--Comedia Movies Carusel-->
        <h2>Comedia</h2>
        <hr id="hr_color">
        @foreach (var item in Model.GenresCategories.Where(gc => gc.Name.Contains("Comedia")))
        {
            <div class="carousel owl-carousel @item.Name">

                @await Component.InvokeAsync("Movie", new{categoryId = item.Id})

            </div>
        }
    </div>
    <div class="container Suggested">
        <!--Top 5 Carusel-->
        <div>
            <h2 class="text-white fw-bolder">Top 5</h2>
            <hr id="hr_color">
            <div class=" suggestedFor owl-carousel">
                @foreach (var item in Model.GenresCategories)
                {

                    @await Component.InvokeAsync("Movie", new{Top = true})

                }
            </div>
        </div>
    </div>
    <div class="TrendingNow ">
        <!--History  Carusel-->
        <h2 class="text-white fw-bolder">History</h2>
        <hr id="hr_color">
        @foreach (var item in Model.GenresCategories.Where(gc => gc.Name.Contains("History")))
        {
            <div class=" trendingNow owl-carousel @item.Name">
                @await Component.InvokeAsync("Movie", new{categoryId = item.Id})
            </div>
        }
    </div>
</div>
<div class="container-fluid BestSeries">
    <!--Best Series Carusel-->
    <div class="container">
        <h3>Featured</h3>
        <h1>Best Series</h1>
        <div id="moviesCarusel">
            <!--Drama,Family,Romance Carusel-->
            <div class="movie-category">
                <ul class="BestSeries_li text-center">
                    @foreach (var item in Model.GenresCategories.Where(gc => gc.Name.Contains("Drama") || gc.Name.Contains("Family") || gc.Name.Contains("Romance")))
                    {

                        <li class=" active px-3 me-4 " data-category="@item.Name">@item.Name</li>

                    }
                </ul>
                @(count = 0)
                <div class="images container ">

                    @foreach (var item in Model.GenresCategories.Where(gc => gc.Name.Contains("Drama") || gc.Name.Contains("Family") || gc.Name.Contains("Romance")))
                    {
                        count++;
                        if (count == 1)
                        {

                            <div class="image @item.Name  active text-white ">
                                @await Component.InvokeAsync("Movie", new{categoryId = item.Id})
                            </div>

                        }
                        else
                        {
                            <div class="image @item.Name  text-white ">
                                @await Component.InvokeAsync("Movie", new{categoryId = item.Id})
                            </div>
                        }
                    }
                </div>
            </div>
        </div>
    </div>
</div>
<div class="container Suggested">
    <!--Animation Carusel-->
    <div>
        <h2 class="text-white fw-bolder">Animation</h2>
        <hr id="hr_color">
        @foreach (var item in Model.GenresCategories.Where(gc => gc.Name.Contains("Animation")))
        {
            <div class=" suggestedFor owl-carousel @item.Name">
                @await Component.InvokeAsync("Movie",new{categoryId = item.Id})
            </div>
        }
    </div>
</div>

@section Scripts{
    <script>
        //Sport Action active deactive.page kecid etmek ucun active edir.
        $(document).ready(function () {
            $('ul > li').click(function () {

                var cat = $(this).data("category");
                var findedImages = $('.imageJ').hasClass(`${cat}`)

                if (findedImages == true) {

                    $('.imageJ').removeClass("active");
                    $(`.${cat}`).addClass('active');
                    $(`.${cat}`).css({ 'transition': '0.5s' });
                }

            });
        });
        //Sport Action Drama Family Romance transistion,backround color.
        function addListClickHandlers(listSelector) {
            var items = document.querySelectorAll(listSelector + ' li');

            for (var i = 0; i < items.length; i++) {
                items[i].addEventListener('click', function () {
                    // Remove 'selected' class from all items
                    for (var j = 0; j < items.length; j++) {
                        items[j].classList.remove('selected');
                    }

                    // Add 'selected' class to clicked item
                    this.classList.add('selected');

                    // Change background color of first item to gray if not selected
                    if (!items[0].classList.contains('selected')) {
                        items[0].style.backgroundColor = '#202020';
                    } else {
                        items[0].style.backgroundColor = 'red';
                    }
                });
            }
        }

        addListClickHandlers('.featured-movies-shows');
        addListClickHandlers('.BestSeries_li');

        //Image focus top bar. sekil uzerinde focus olduqda sag yuxaridan menyu acilir.
        $(document).ready(function () {
            $('.img-div div').hover(function () {

                $(this).children().css({ 'transform': 'scale(1.2)', 'transition': 'transform 0.5s', 'z-index': '1' });

            }, function () {
                $(this).children().css({ 'transform': 'scale(1)', 'z-index': '0' });
            });

            $('.img-div > div').mouseover(function () {
                $(this).addClass("active");
            });

            $('.img-div > div').mouseleave(function () {
                $(this).removeClass("active");
            });
        });
    </script>
}